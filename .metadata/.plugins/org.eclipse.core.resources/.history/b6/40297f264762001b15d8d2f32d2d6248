package com.br.alfaEscola.controle.resource.tests;

import static org.mockito.Mockito.when;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.verify;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.context.ApplicationEventPublisher;

import com.br.alfaEscola.controle.model.Gabarito;
import com.br.alfaEscola.controle.model.Resposta;
import com.br.alfaEscola.controle.model.ValorResposta;
import com.br.alfaEscola.controle.repository.GabaritoRepository;
import com.br.alfaEscola.controle.resource.GabaritoResource;
import com.br.alfaEscola.controle.service.GabaritoRespostaService;

@ExtendWith(MockitoExtension.class)
public class GabaritoResourceTest {
	@Mock
	private ApplicationEventPublisher publisher;

	@Mock
	private GabaritoRespostaService GabaritoRespostaService;
	
	@Mock
	private GabaritoRepository gabaritoRepository;
	
	@InjectMocks
	private GabaritoResource gabaritoResource;

	@Test
	private void testListar() {
		List<Gabarito> listaGabaritos = new ArrayList<>();
		listaGabaritos.add(retornaMockGabarito());
		
		when(gabaritoRepository.findAll()).thenReturn(listaGabaritos);
		
		List<Gabarito> gabaritos = gabaritoResource.listar();
		verify(gabaritoRepository).findAll();
		
		assertThat(gabaritos.size()).isEqualTo(1);
		assertThat(gabaritos.get(0).getRespostas().size()).isEqualTo(2);
	}

	
	@Test
	private void testCriar() {
		
	}
	
	private Gabarito retornaMockGabarito() {
		Gabarito gabarito = new Gabarito();
		
		Resposta resposta1 = new Resposta(ValorResposta.A);
		Resposta resposta2 = new Resposta(ValorResposta.C);
		Resposta resposta3 = new Resposta(ValorResposta.D);
		
		List<Resposta> listaRespostas = new ArrayList<>();
		listaRespostas.add(resposta1);
		listaRespostas.add(resposta2);
		listaRespostas.add(resposta3);
		
		gabarito.setDescricao("Novo gabarito");
		gabarito.setRespostas(listaRespostas);
		return gabarito;
	}
}
